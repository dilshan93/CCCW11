AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  carTableName:
    Type: String
    Default: car
    Description: (Required) The name of the new DynamoDB table you want to create
      and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Required parameter. Must be characters only. No numbers
      allowed.
  carModelTableName:
    Type: String
    Default: carmodel
    Description: (Required) The name of the new DynamoDB table you want to create
      and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Required parameter. Must be characters only. No numbers
      allowed.
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn:
              Fn::GetAtt:
              - MyAuthFunction
              - Arn
  ModelSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.modelSearchService
      Runtime: nodejs14.x
      CodeUri: ModelSearchFunction
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: carModelTableName
      Environment:
        Variables:
          TABLE_NAME1:
            Ref: carModelTableName
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /get-car-model/{modelName}
            Method: GET
      Timeout: 100
  PriceRetrievalFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.priceRetrievalService
      Runtime: nodejs14.x
      CodeUri: PriceRetrievalFunction
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: carTableName
      Environment:
        Variables:
          TABLE_NAME:
            Ref: carTableName
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /get-car-price/{itemId}
            Method: GET
      Timeout: 100
  OptionsRetrievalFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.optionsRetrievalService
      Runtime: nodejs14.x
      CodeUri: OptionsRetrievalFunction
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: carTableName
      Environment:
        Variables:
          TABLE_NAME:
            Ref: carTableName
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyApi
            Path: /get-car-options/{itemId}
            Method: GET
      Timeout: 100
  CarDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: carTableName
      AttributeDefinitions:
      - AttributeName: itemId
        AttributeType: S
      KeySchema:
      - AttributeName: itemId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  CarModelDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: carModelTableName
      AttributeDefinitions:
      - AttributeName: modelId
        AttributeType: S
      KeySchema:
      - AttributeName: modelId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyAuthFunction
      Handler: handler.authorizer
      Runtime: nodejs14.x
Outputs:
  Region:
    Description: Region
    Value:
      Ref: AWS::Region
  ApiId:
    Description: API ID
    Value:
      Ref: MyApi
  ApiUrl:
    Description: API endpoint URL for Prod environment
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/
